* {
  margin: 0;
  padding: 0;
}


header {
  display: flex;
  flex-direction: row;
  background-color: white;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  height: 100px;
  padding: 20px;
  justify-content: space-between;
  align-items: center;
}


.code-text {
  font-size: 20px;
  font-weight: bold;
  flex-direction: column;
  text-align: left;
}

.progress-bar {
  height: 50px;
  width: 50px;
  flex-shrink: 0;
  
}


header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.draggable{
  cursor: grab;
}

header button {
  background-color: #007bff;
  border: none;
  color: white;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
}

body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 20px;
  background-color: #f4f4f4;
  color: #333;
}

ul {
  list-style: none;
}

li {
  background-color: white;
  padding: 20px;
  margin-bottom: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
}

li img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  object-fit: cover;
  margin-right: 20px;
}




.text{
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  text-align: left;
  flex-grow: 1;
  word-wrap: break-word;
  overflow: hidden;
}
/* .tasks li:focus-within {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
} */

.demo{
  display: none;
}

.circular-progress {
  --size: 250px;
  --half-size: calc(var(--size) / 2);
  --stroke-width: 20px;
  --radius: calc((var(--size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * 2 * 3.1416); /* Use 2 * pi for the circumference */
  --dash: calc((var(--progress) * var(--circumference)) / 60); /* Adjust for maximum value of 60 */
}
.circular-progress text {
  font-size: 70px; 
  font-weight: bold; /* Or a numerical value like 600, 700 */
  fill: gray;  
} 

.circular-progress circle {
  cx: var(--half-size);
  cy: var(--half-size);
  r: var(--radius);
  stroke-width: var(--stroke-width);
  fill: none;
  stroke-linecap: round;
}

.circular-progress circle.bg {
  stroke: #ddd;
}

.circular-progress circle.fg {
  transform: rotate(-90deg);
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 0.3s linear 0s;
  stroke: #5394fd;
}

